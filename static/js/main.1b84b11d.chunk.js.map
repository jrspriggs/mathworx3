{"version":3,"sources":["additionForm.jsx","additionGame.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AdditionForm","props","state","additionTerm","inputUpdated","bind","submitAdditionterm","e","value","target","this","setState","preventDefault","onSubmit","className","htmlFor","type","name","onChange","pattern","onClick","Component","defaultProps","AdditionGame","numberCorrect","baseNumber","inputTerm","numberSentence","answerResponse","submitAdditionAnswer","createNumberSentence","getRandomBase","baseNum","numSentence","toString","error","errorInfo","console","log","prevProps","parseInt","addTerm","Math","floor","random","App","onFormSubmit","React","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.1b84b11d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AdditionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      additionTerm: 0,\r\n    };\r\n    this.inputUpdated = this.inputUpdated.bind(this);\r\n    this.submitAdditionterm = this.submitAdditionterm.bind(this);\r\n  }\r\n  inputUpdated(e) {\r\n    const { value } = e.target;\r\n\r\n    this.setState({ additionTerm: value });\r\n  }  \r\n  \r\n  submitAdditionterm(e) {\r\n    e.preventDefault();\r\n    const { onSubmit } = this.props;\r\n\r\n    onSubmit(this.state.additionTerm);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"add-form\">\r\n        <form>\r\n          <label htmlFor=\"addTerm\">Plus What?</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"input\"\r\n            name=\"addTerm\"\r\n            value={this.state.additionTerm}\r\n            onChange={this.inputUpdated}\r\n            pattern=\"[0-9]*\"/>\r\n          <button onClick={this.submitAdditionterm} className='btn btn-success'>Let's Play</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAdditionForm.defaultProps = {\r\n  onSubmit: () => {}\r\n};\r\n\r\nexport default AdditionForm;","import React, { Component } from 'react';\r\n\r\nclass AdditionGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      numberCorrect: 0,\r\n      baseNumber: 0,\r\n      inputTerm:0,\r\n      numberSentence: '',\r\n      answerResponse: ''\r\n    };\r\n    \r\n    this.submitAdditionAnswer = this.submitAdditionAnswer.bind(this);\r\n    this.createNumberSentence = this.createNumberSentence.bind(this);\r\n    this.getRandomBase = this.getRandomBase.bind(this);\r\n   this.inputUpdated = this.inputUpdated.bind(this);\r\n  }\r\n  inputUpdated(e) {\r\n    const { value } = e.target;\r\n\r\n    this.setState({ inputTerm: value });\r\n  }  \r\n  \r\n  createNumberSentence() {\r\n    let baseNum = this.getRandomBase();\r\n    let numSentence = baseNum.toString() + \" + \" + this.props.additionTerm.toString() + \" = ? \";\r\n    this.setState({baseNumber: baseNum, numberSentence: numSentence});\r\n  }\r\n  \r\n  componenetDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.additionTerm !== this.props.additionTerm) {\r\n      this.createNumberSentence();\r\n    }\r\n  }\r\n  \r\n  submitAdditionAnswer(e) {\r\n    e.preventDefault();\r\n    const baseNumber = parseInt(this.state.baseNumber);\r\n    const addTerm = parseInt(this.props.additionTerm);\r\n    const answer = parseInt(this.state.inputTerm);\r\n    if(answer === (addTerm + baseNumber)) {\r\n      this.setState({numberCorrect: this.state.numberCorrect+1, answerResponse: 'Correctomundo'});\r\n      this.createNumberSentence();\r\n    } else {\r\n      this.setState({answerResponse: \"Wrong answer dude.\"});\r\n    }\r\n  }\r\n  \r\n  getRandomBase() {\r\n    return Math.floor(Math.random() * 11);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"add-game\">\r\n        <form>\r\n          <label htmlFor=\"answer\"> {this.state.numberSentence} </label>\r\n          <br />\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"input\"\r\n            value={this.state.inputTerm}\r\n            onChange={this.inputUpdated}\r\n            name=\"answer\"\r\n            pattern=\"[0-9]*\"/>\r\n          <button onClick={this.submitAdditionAnswer} className='btn btn-success'>Answer</button>\r\n        </form>\r\n        <br />\r\n        <div>\r\n          {this.state.answerResponse}<br />\r\n          Number Correct: {this.state.numberCorrect}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdditionGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport AdditionForm from './additionForm.jsx';\nimport AdditionGame from './additionGame.jsx';\n\nclass App extends React.Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      addTerm: 0 \n    };\n\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onFormSubmit(addTerm) {\n    const additionTerm = addTerm;\n\n    this.setState({ addTerm: additionTerm });\n    console.log(this.state);\n  }\n\n  render() {\n    const {addTerm} = this.state;\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        MathWorx\n      </header>\n        Addition\n        <AdditionForm onSubmit={this.onFormSubmit} />\n        <AdditionGame additionTerm={addTerm} />\n    </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}